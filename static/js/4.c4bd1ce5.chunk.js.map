{"version":3,"sources":["components/Typography/PageTitle.js","components/CTA.js","utils/numberWithCommas.js","assets/img/money.png","../node_modules/classnames/index.js","assets/img/bnb.png","components/Cards/InfoCard.js","components/RoundIcon.js","utils/timeDifference.js","pages/Dashboard.js"],"names":["PageTitle","children","className","props","CTA","text","holdings","addrFilledColorConditional","address","undefined","substring","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","href","target","rel","dangerouslySetInnerHTML","__html","numberWithCommas","x","toString","replace","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","InfoCard","title","value","icon","button","RoundIcon","Icon","iconColorClass","bgColorClass","cls","TimeDifference","current","previous","elapsed","secs","Math","round","msPerMinute","mins","msPerHour","hours","msPerDay","Dashboard","tikiPrice","wallet","setWallet","getWallet","bnbPrice","highestBuyers","bnbHoldings","totalPaid","paid","lastPaid","nextPayoutProgress","nextPayoutValue","setAddress","setHoldings","setPaid","setLastPaid","setNextPayoutProgress","setNextPayoutValue","useState","setReinvestContract","tikiContract","setTikiContract","claimed","setClaimed","Number","toFixed","payoutText","Date","now","earningsInDollars","earningsInBnb","compoundedTikiAfterNDays","starting","days","accumulatedTiki","ethers","utils","isAddress","CoinsIcon","PeopleIcon","MoneyIcon","CartIcon","disabled","onClick","encodedABI","interface","encodeFunctionData","getTransactionCount","then","nonce","tx","chainId","hexlify","gasPrice","gasLimit","to","parseEther","data","sendTransaction","confirmation","src","require"],"mappings":"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","file":"static/js/4.c4bd1ce5.chunk.js","sourcesContent":["import React from 'react'\n\nfunction PageTitle({ children, className, ...props }) {\n  return (\n    <h1\n      className={\n        'my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200 ' +\n        className\n      }\n      {...props}\n    >\n      {children}\n    </h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useEffect } from 'react'\n\nimport { ethers } from 'ethers'\n\nfunction CTA({ text, holdings, address }) {\n\n  const addrFilledColorConditional = (text !== undefined && text !== '' && (text.substring(0, 2) === '0x')) ? 'bg-green-600' : 'bg-purple-600'\n\n  return (\n    <div className=\"hidden lg:block\">\n    <span\n      className={`flex items-center justify-between p-4 mb-8 text-sm font-semibold text-purple-100 ${addrFilledColorConditional} rounded-lg shadow-md focus:outline-none focus:shadow-outline-purple`}\n    >\n      <div className=\"flex items-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n        </svg>\n        <span>{(text !== undefined && text !== '' && (text.substring(0, 2) === '0x')) ? holdings < 10000 ? text + ' - YOU NEED TO HOLD MORE THAN 10K TIKI TO RECEIVE DIVIDENDS' : text : 'Please enter your address above'}</span>\n      </div>\n      <a href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x9b76D1B12Ff738c113200EB043350022EBf12Ff0\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Buy TIKI <span dangerouslySetInnerHTML={{ __html: '&RightArrow;' }}></span>\n      </a>\n    </span>\n    </div>\n  )\n}\n\nexport default CTA\n","export default function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","module.exports = __webpack_public_path__ + \"static/media/money.d301ec34.png\";","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __webpack_public_path__ + \"static/media/bnb.162aaf57.png\";","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, button, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","export default function TimeDifference(current, previous) {\n\n  var msPerMinute = 60 * 1000;\n  var msPerHour = msPerMinute * 60;\n  var msPerDay = msPerHour * 24;\n  var msPerMonth = msPerDay * 30;\n  var msPerYear = msPerDay * 365;\n\n  var elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n      const secs = Math.round(elapsed/1000)\n      return secs > 1 ? secs + ' Seconds Ago' : secs + ' Second Ago';   \n  }\n\n  else if (elapsed < msPerHour) {\n      const mins = Math.round(elapsed/msPerMinute)\n      return mins > 1 ? mins + ' Minutes Ago' : mins + ' Minute Ago';   \n  }\n\n  else if (elapsed < msPerDay ) {\n      const hours = Math.round(elapsed/msPerHour )\n      return hours > 1 ? hours + ' Hours Ago' : hours + ' Hour Ago';  \n  }\n\n  else if (elapsed < msPerMonth) {\n      return '~ ' + Math.round(elapsed/msPerDay) + ' days Ago';   \n  }\n\n  else if (elapsed < msPerYear) {\n      return '~ ' + Math.round(elapsed/msPerMonth) + ' months Ago';   \n  }\n\n  else {\n      return '~ ' + Math.round(elapsed/msPerYear ) + ' years Ago';   \n  }\n}","import React, { useState, useEffect } from 'react'\n\nimport { ethers } from 'ethers'\n\nimport CTA from '../components/CTA'\nimport InfoCard from '../components/Cards/InfoCard'\nimport PageTitle from '../components/Typography/PageTitle'\nimport RoundIcon from '../components/RoundIcon'\nimport { CartIcon, MoneyIcon, PeopleIcon, HeartIcon, CoinsIcon } from '../icons'\nimport { Card, CardBody, Button } from '@windmill/react-ui'\n\nimport TimeDifference from '../utils/timeDifference'\nimport numberWithCommas from '../utils/numberWithCommas'\n\nfunction Dashboard(props) {\n\n  const { tikiPrice, wallet, setWallet, getWallet, highestBuyers, bnbPrice, bnbHoldings, totalPaid, holdings, paid, lastPaid, address, nextPayoutProgress, nextPayoutValue, setHoldings, setPaid, setLastPaid, setAddress, setNextPayoutProgress, setNextPayoutValue } = props\n\n  const [reinvestContract, setReinvestContract] = useState(null)\n  const [tikiContract, setTikiContract] = useState(null)\n  const [reinvested, setReinvested] = useState(false)\n  const [claimed, setClaimed] = useState(false)\n  const [reinvestAmount, setReinvestAmount] = useState((Number(bnbHoldings)-((2000000*15*1000000000)/1e18)) > 0 ? (Number(bnbHoldings)-((2000000*15*1000000000)/1e18)).toFixed(4) : '0')\n\n  const reinvestInput = <><span>Reinvest </span><input onClick={e => e.stopPropagation()} type=\"text\" className=\"w-1/3 text-black text-center\" value={reinvestAmount} onChange={e => setReinvestAmount(isNaN(e.target.value) ? reinvestAmount : e.target.value)} /><span> BNB (click here to confirm)</span></>\n  const payoutText = <><span className=\"text-yellow-300\">{nextPayoutValue != 0 ? nextPayoutValue + ' BNB' : 'Processing'}</span>{Date.now()-lastPaid >= 3600000 ? ` | ${nextPayoutProgress}%` : ` | ${(60-((Date.now()-lastPaid)/60000)).toFixed(0)}m`}</>\n\n  const earningsInDollars = (holdings/1000000000)*330000\n  const earningsInBnb = earningsInDollars/bnbPrice\n\n  const compoundedTikiAfterNDays = (starting, days) => {\n    let accumulatedTiki = Number(starting)\n    for (let i = 0; i < days; i++) {\n      accumulatedTiki = accumulatedTiki + (((accumulatedTiki/1000000000)*330000)/tikiPrice)\n    }\n    return accumulatedTiki.toFixed(0)\n  }\n\n  return (\n    <div className=\"pb-10\">\n\n      <PageTitle className=\"text-3xl\">TIKI Earnings Manager</PageTitle>\n\n      <CTA holdings={holdings} text={(address !== \"\" && ethers.utils.isAddress(address) && bnbHoldings !== 0) ? `${address} | BNB In Your Wallet: ${bnbHoldings} ($${numberWithCommas((bnbHoldings*bnbPrice).toFixed(2))})` : address} />\n\n      <div className=\"grid gap-6 md:grid-cols-2 xl:grid-cols-4\">\n        <InfoCard title=\"Your TIKI Holdings\" value={`${numberWithCommas(holdings)} TIKI`}>\n          <RoundIcon\n            icon={CoinsIcon}\n            iconColorClass=\"text-orange-500 dark:text-orange-100\"\n            bgColorClass=\"bg-orange-100 dark:bg-orange-500\"\n            className=\"mr-4\"\n          />\n        </InfoCard>\n        \n        <Card>\n          <CardBody className=\"flex items-center\">\n            <RoundIcon\n              icon={PeopleIcon}\n              iconColorClass=\"text-green-500 dark:text-green-100\"\n              bgColorClass=\"bg-green-100 dark:bg-green-500\"\n              className=\"mr-4\"\n            />\n            <div>\n              <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">Total BNB Paid</p>\n              \n              <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\"><span className=\"text-yellow-300\">{`${(paid / 1e18).toFixed(4)}`} BNB</span></p>\n            </div>\n          </CardBody>\n        </Card>\n\n        <InfoCard className=\"\" title=\"Last Payout Time\" value={`${lastPaid === 0 ? 'Never' : TimeDifference(Date.now(), lastPaid)}`}>\n            <RoundIcon\n              icon={MoneyIcon}\n              iconColorClass=\"text-blue-500 dark:text-blue-100\"\n              bgColorClass=\"bg-blue-100 dark:bg-blue-500\"\n              className=\"mr-4\"\n            />\n        </InfoCard>\n        \n        <Card>\n          <CardBody className=\"flex items-center\">\n            <RoundIcon\n              icon={CartIcon}\n              iconColorClass=\"text-yellow-500 dark:text-yellow-100\"\n              bgColorClass=\"bg-yellow-100 dark:bg-yellow-500\"\n              className=\"mr-4\"\n            />\n            <div>\n              <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">Next Payout Loading</p>\n              \n              <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{payoutText}</p>\n            </div>\n          </CardBody>\n        </Card>\n\n      </div>\n        <Card className=\"mt-4\">\n          <CardBody className=\"flex items-center\">\n            <Button disabled={nextPayoutValue == 0 ? true : false} className={`w-full h-full text-lg font-semibold`}\n                onClick={() => {\n                if (wallet !== null && tikiContract !== null) {\n                  const encodedABI = tikiContract.interface.encodeFunctionData( 'claim', [])\n                  wallet.getTransactionCount().then(nonce => {\n                    const tx = {\n                      chainId: 56,\n                      nonce: ethers.utils.hexlify(nonce),\n                      gasPrice: ethers.utils.hexlify(7*1000000000),\n                      gasLimit: ethers.utils.hexlify(250000),\n                      to: tikiContract.address,\n                      value: ethers.utils.parseEther('0'),\n                      data: encodedABI\n                    }\n      \n                    wallet.sendTransaction(tx).then(confirmation => {\n                      setClaimed(true)\n                    })\n                  })\n                } else {\n                  getWallet().then(wallet => {\n                    setWallet(wallet[0])\n                    setAddress(wallet[1])\n                    setReinvestContract(wallet[2])\n                    setTikiContract(wallet[3])\n                  })\n                }\n              }}>{nextPayoutValue == 0 ? 'Payout Is Processing' : wallet !== null ? claimed ? 'Payout Claimed!' : 'Claim Payout' : 'Optional - Connect Wallet and Claim Manually NOW'}</Button>\n          \n          {/* <Button disabled={(tikiPrice === null) || (holdings == 0) || reinvested} className=\"ml-4 w-1/2 h-full text-lg font-bold\" style={{backgroundColor: '#239470', boxShadow: '0px 0px 20px #057a55'}} onClick={\n            () => {\n              if (wallet !== null && reinvestContract !== null) {\n                if (tikiPrice == 0) return\n                const tokensOut = (((Number(reinvestAmount)*bnbPrice)/tikiPrice)*0.93)\n\n                const encodedABI = reinvestContract.interface.encodeFunctionData( 'swapETHForExactTokens', [ethers.utils.parseEther(tokensOut.toFixed(0)), Date.now()+300000])\n\n                wallet.getTransactionCount().then(nonce => {\n                  const tx = {\n                    chainId: 56,\n                    nonce: ethers.utils.hexlify(nonce),\n                    gasPrice: ethers.utils.hexlify(5*1000000000),\n                    gasLimit: ethers.utils.hexlify(2000000),\n                    to: reinvestContract.address,\n                    value: ethers.utils.parseEther(reinvestAmount.toString()),\n                    data: encodedABI\n                  }\n\n                  wallet.sendTransaction(tx).then(confirmation => {\n                    setReinvested(true)\n                  })\n\n                })\n              } else {\n                getWallet().then(wallet => {\n                  setWallet(wallet[0])\n                  setAddress(wallet[1])\n                  setReinvestContract(wallet[2])\n                  setTikiContract(wallet[3])\n                })\n              }\n            }}>\n              <span className=\"w-full\" style={{textShadow: '1px 1px 1px black'}}>\n                  {holdings == 0 ? \"You Do Not Own Enough TIKI To Reinvest\" : wallet !== null ? reinvested ? `Reinvested ${reinvestAmount} BNB at Only 5% Buy Tax!` : reinvestInput : \"Connect and Reinvest With ONLY 5% Buy Tax!\"}\n              </span>\n          </Button> */}\n          \n          </CardBody>\n        </Card>\n        \n      \n\n      <div className=\"grid grid-cols-2 gap-4 mt-4\">\n\n        <Card className=\"col-span-2\">\n          <CardBody className=\"flex flex-col text-center items-center\">\n            <img className=\"w-32 h-32 mb-4 mt-4\" src={require('../assets/img/bnb.png')} />\n            <p className=\"mt-4 font-semibold text-gray-600 dark:text-gray-300 text-3xl text-center\">Total BNB Paid To TIKI Holders</p><br/>\n            <p className=\"text-green-400 dark:text-green-400 text-4xl md:text-6xl text-center mb-8\">{numberWithCommas(totalPaid)} <span className=\"text-yellow-300\">BNB</span><br/> = ${numberWithCommas((bnbPrice*totalPaid).toFixed(0))}</p>\n          </CardBody>\n        </Card>\n\n        <Card className=\"col-span-2 lg:col-span-1\">\n          <CardBody className=\"flex flex-col text-center items-center\">\n            <img className=\"w-32 h-32 mb-4 mt-4\" src={require('../assets/img/money.png')} />\n            <p className=\"mt-4 font-semibold text-gray-600 dark:text-gray-300 text-3xl text-center\">Your {numberWithCommas(holdings)} TIKI Earns:</p><br/>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{numberWithCommas(earningsInBnb.toFixed(2))} BNB</span> (${numberWithCommas((earningsInDollars).toFixed(2))})</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-2\">Per Day</span>\n            </div>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{numberWithCommas((earningsInBnb*7).toFixed(2))} BNB</span> (${numberWithCommas((earningsInDollars*7).toFixed(2))})</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-2\">Per Week</span>\n            </div>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{numberWithCommas((earningsInBnb*30).toFixed(2))} BNB</span> (${numberWithCommas((earningsInDollars*30).toFixed(2))})</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-2\">Per Month</span>\n            </div>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{numberWithCommas((earningsInBnb*365).toFixed(2))} BNB</span> (${numberWithCommas((earningsInDollars*365).toFixed(2))})</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-2\">Per Year</span>\n            </div>\n            <br/>\n            <p className=\"text-gray-600 dark:text-gray-400 text-xl text-center -mt-2\">Estimations are based on $3m trading volume</p>\n          </CardBody>\n        </Card>\n        <Card className=\"col-span-2 lg:col-span-1\">\n          <CardBody className=\"flex flex-col text-center items-center\">\n            <img className=\"w-32 h-32 mb-4 mt-4\" src={require('../assets/img/money.png')} />\n            <p className=\"mt-4 font-semibold text-gray-600 dark:text-gray-300 text-3xl text-center\">By Reinvesting Dividends Every Day, Your {numberWithCommas(holdings)} TIKI Becomes:</p><br/>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{holdings != 0 ? numberWithCommas(compoundedTikiAfterNDays(holdings, 7)) : '0'} TIKI</span> ({holdings != 0 ? (compoundedTikiAfterNDays(holdings, 7)/holdings).toFixed(2) : '0'}x Earnings)</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-1\">In a Week</span>\n            </div>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{holdings != 0 ? numberWithCommas(compoundedTikiAfterNDays(holdings, 30)) : '0'} TIKI</span> ({holdings != 0 ? (compoundedTikiAfterNDays(holdings, 30)/holdings).toFixed(2) : '0'}x Earnings)</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-1\">In a Month</span>\n            </div>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{holdings != 0 ? numberWithCommas(compoundedTikiAfterNDays(holdings, 182)) : '0'} TIKI</span> ({holdings != 0 ? (compoundedTikiAfterNDays(holdings, 60)/holdings).toFixed(2) : '0'}x Earnings)</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-1\">In 6 Months</span>\n            </div>\n            <div className=\"flex\">\n              <p className=\"text-green-400 dark:text-green-400 text-2xl text-center\"><span className=\"text-yellow-300\">{holdings != 0 ? numberWithCommas(compoundedTikiAfterNDays(holdings, 365)) : '0'} TIKI</span> ({holdings != 0 ? (compoundedTikiAfterNDays(holdings, 180)/holdings).toFixed(2) : '0'}x Earnings)</p><span className=\"text-gray-600 dark:text-gray-400 text-xl text-center ml-2 mt-1\">In 1 Year</span>\n            </div>\n            <br/>\n            <p className=\"text-gray-600 dark:text-gray-400 text-xl text-center -mt-2\">Estimations are based on current $TIKI price</p>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Dashboard\n"],"sourceRoot":""}