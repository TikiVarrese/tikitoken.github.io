{"version":3,"sources":["pages/Modals.js","components/Typography/PageTitle.js","components/CTA.js"],"names":["Modals","useState","isModalOpen","setIsModalOpen","closeModal","onClick","isOpen","onClose","className","layout","block","size","PageTitle","children","CTA","address","holdings","addrFilledColorConditional","undefined","ethers","utils","isAddress","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","href","target","rel","dangerouslySetInnerHTML","__html"],"mappings":"mKA8DeA,UAxDf,WAAmB,IAAD,EACsBC,oBAAS,GAD/B,mBACTC,EADS,KACIC,EADJ,KAOhB,SAASC,IACPD,GAAe,GAGjB,OACE,oCACE,kBAAC,IAAD,eACA,kBAAC,IAAD,MAEA,6BACE,kBAAC,SAAD,CAAQE,QAdd,WACEF,GAAe,KAaX,eAGF,kBAAC,QAAD,CAAOG,OAAQJ,EAAaK,QAASH,GACnC,kBAAC,cAAD,qBACA,kBAAC,YAAD,sHAIA,kBAAC,cAAD,KAME,yBAAKI,UAAU,mBACb,kBAAC,SAAD,CAAQC,OAAO,UAAUJ,QAASD,GAAlC,WAIF,yBAAKI,UAAU,mBACb,kBAAC,SAAD,gBAEF,yBAAKA,UAAU,0BACb,kBAAC,SAAD,CAAQE,OAAK,EAACC,KAAK,QAAQF,OAAO,UAAUJ,QAASD,GAArD,WAIF,yBAAKI,UAAU,0BACb,kBAAC,SAAD,CAAQE,OAAK,EAACC,KAAK,SAAnB,gB,gCCpDZ,oBAQeC,IANf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,wBAAIL,UAAU,gEAAgEK,K,gCCJlF,4BA2BeC,IAvBf,YAAqC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAEhBC,OAA0CC,IAAZH,GAAqC,KAAZA,GAAkBI,IAAOC,MAAMC,UAAUN,GAAY,eAAiB,gBAEnI,OACE,yBAAKP,UAAU,mBACf,0BACEA,UAAS,2FAAsFS,EAAtF,yEAET,yBAAKT,UAAU,qBACb,yBAAKc,MAAM,6BAA6Bd,UAAU,eAAee,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBACtG,0BAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,wJAEvE,mCAAoBX,IAAZH,GAAqC,KAAZA,GAAkBI,IAAOC,MAAMC,UAAUN,GAAYC,EAAW,IAAQD,EAAU,8DAAgEA,EAAU,oCAE/L,uBAAGe,KAAK,wGAAwGC,OAAO,SAASC,IAAI,uBAApI,YACW,0BAAMC,wBAAyB,CAAEC,OAAQ","file":"static/js/11.3a6c0a54.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport PageTitle from '../components/Typography/PageTitle'\nimport CTA from '../components/CTA'\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from '@windmill/react-ui'\n\nfunction Modals() {\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  function openModal() {\n    setIsModalOpen(true)\n  }\n\n  function closeModal() {\n    setIsModalOpen(false)\n  }\n\n  return (\n    <>\n      <PageTitle>Modals</PageTitle>\n      <CTA />\n\n      <div>\n        <Button onClick={openModal}>Open modal</Button>\n      </div>\n\n      <Modal isOpen={isModalOpen} onClose={closeModal}>\n        <ModalHeader>Modal header</ModalHeader>\n        <ModalBody>\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nostrum et eligendi repudiandae\n          voluptatem tempore!\n        </ModalBody>\n        <ModalFooter>\n          {/* I don't like this approach. Consider passing a prop to ModalFooter\n           * that if present, would duplicate the buttons in a way similar to this.\n           * Or, maybe find some way to pass something like size=\"large md:regular\"\n           * to Button\n           */}\n          <div className=\"hidden sm:block\">\n            <Button layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"hidden sm:block\">\n            <Button>Accept</Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button block size=\"large\" layout=\"outline\" onClick={closeModal}>\n              Cancel\n            </Button>\n          </div>\n          <div className=\"block w-full sm:hidden\">\n            <Button block size=\"large\">\n              Accept\n            </Button>\n          </div>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nexport default Modals\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useEffect } from 'react'\n\nimport { ethers } from 'ethers'\n\nfunction CTA({ address, holdings }) {\n\n  const addrFilledColorConditional = (address !== undefined && address !== '' && ethers.utils.isAddress(address)) ? 'bg-green-600' : 'bg-purple-600'\n\n  return (\n    <div className=\"hidden lg:block\">\n    <span\n      className={`flex items-center justify-between p-4 mb-8 text-sm font-semibold text-purple-100 ${addrFilledColorConditional} rounded-lg shadow-md focus:outline-none focus:shadow-outline-purple`}\n    >\n      <div className=\"flex items-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n        </svg>\n        <span>{(address !== undefined && address !== '' && ethers.utils.isAddress(address)) ? holdings < 10000 ? address + ' - YOU NEED TO HOLD MORE THAN 10K TIKI TO RECEIVE DIVIDENDS' : address : 'Please enter your address above'}</span>\n      </div>\n      <a href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x9b76D1B12Ff738c113200EB043350022EBf12Ff0\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Buy TIKI <span dangerouslySetInnerHTML={{ __html: '&RightArrow;' }}></span>\n      </a>\n    </span>\n    </div>\n  )\n}\n\nexport default CTA\n"],"sourceRoot":""}