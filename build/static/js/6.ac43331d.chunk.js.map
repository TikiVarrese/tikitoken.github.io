{"version":3,"sources":["components/RoundIcon.js","../node_modules/classnames/index.js","pages/Cards.js","components/Typography/PageTitle.js","components/CTA.js","components/Typography/SectionTitle.js","components/Cards/InfoCard.js"],"names":["RoundIcon","Icon","icon","iconColorClass","bgColorClass","className","cls","classNames","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","Cards","href","target","rel","colored","PageTitle","children","CTA","address","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","undefined","substring","dangerouslySetInnerHTML","__html","SectionTitle","InfoCard","title","value","button"],"mappings":"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","file":"static/js/6.ac43331d.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nfunction RoundIcon({\n  icon: Icon,\n  iconColorClass = 'text-purple-600 dark:text-purple-100',\n  bgColorClass = 'bg-purple-100 dark:bg-purple-600',\n  className,\n}) {\n  const baseStyle = 'p-3 rounded-full'\n\n  const cls = classNames(baseStyle, iconColorClass, bgColorClass, className)\n  return (\n    <div className={cls}>\n      <Icon className=\"w-5 h-5\" />\n    </div>\n  )\n}\n\nexport default RoundIcon\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react'\n\nimport PageTitle from '../components/Typography/PageTitle'\nimport SectionTitle from '../components/Typography/SectionTitle'\nimport CTA from '../components/CTA'\nimport InfoCard from '../components/Cards/InfoCard'\nimport { Card, CardBody } from '@windmill/react-ui'\nimport { CartIcon, ChatIcon, MoneyIcon, PeopleIcon } from '../icons'\nimport RoundIcon from '../components/RoundIcon'\n\nfunction Cards() {\n  return (\n    <>\n      <PageTitle>How It Works</PageTitle>\n\n      <div className=\"grid gap-6 mb-8 md:grid-cols-2\">\n        <Card>\n          <CardBody>\n            <p className=\"mb-4 text-3xl font-semibold text-gray-600 dark:text-gray-300\">1. Buying</p>\n            <p className=\"text-gray-600 text-2xl dark:text-gray-400\">\n              You can buy $MOAI from PancakeSwap <a className=\"text-purple-500\" href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0xC89ebd6D883c9e6137574422e27D7ec7Eb7ad697\" target=\"_blank\" rel=\"noopener noreferrer\">HERE</a>, and when you buy tokens for the first time, you become eligible to receive automatic BNB rewards for holding\n            </p>\n          </CardBody>\n        </Card>\n\n        <Card colored className=\"text-white bg-purple-600\">\n          <CardBody>\n            <p className=\"mb-4  text-3xl font-semibold\">2. Harvesting</p>\n            <p className=\"text-2xl\">\n            Every time someone buys or sells $MOAI, the protocol swaps 10% of the tokens they bought for BNB and adds it to the automatic rewards pool\n            </p>\n          </CardBody>\n        </Card>\n\n        <Card colored className=\"text-white bg-purple-600\">\n          <CardBody>\n            <p className=\"mb-4  text-3xl font-semibold\">3. Earning</p>\n            <p className=\"text-2xl\">\n            Your earnings are calculated based on all the transactions that occured after you bought your tokens\n            </p>\n          </CardBody>\n        </Card>\n        \n        \n        <Card>\n          <CardBody>\n            <p className=\"mb-4 text-3xl font-semibold text-gray-600 dark:text-gray-300\">4. Payouts</p>\n            <p className=\"text-gray-600 text-2xl dark:text-gray-400\">\n              Every 6 hours, you are automatically paid BNB in proportion to the size of your holdings relative to the supply\n            </p>\n          </CardBody>\n        </Card>\n\n        <Card>\n          <CardBody>\n            <p className=\"mb-4 font-semibold text-gray-600 dark:text-gray-300 text-2xl\">5. Rolling Payouts</p>\n            <p className=\"text-gray-600 dark:text-gray-400 text-xl\">\n            Every time someone buys or sells, the contract is called. When this transaction is processed, the contract is also looking at the holders list and checking if anyone needs to be paid. If someone is awaiting payment, the contract will send them their BNB rewards during this transaction\n            </p>\n          </CardBody>\n        </Card>\n\n        <Card colored className=\"text-white bg-purple-600\">\n          <CardBody>\n            <p className=\"mb-4 font-semibold text-2xl\">6. Fully Automated</p>\n            <p className=\"text-xl\">\n            This system is fully automated and adds minimal gas fees proportional to value transferred. The number of holders processed through each transaction is dynamic and based on transaction size. Holders will receive dividends from the queue based on their position in the array\n            </p>\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default Cards\n","import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useEffect } from 'react'\n\nfunction CTA({ address }) {\n\n  return (\n    <span\n      className=\"flex items-center justify-between p-4 mb-8 text-sm font-semibold text-purple-100 bg-purple-600 rounded-lg shadow-md focus:outline-none focus:shadow-outline-purple\"\n    >\n      <div className=\"flex items-center\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n        </svg>\n        <span>{(address !== undefined && address !== '' && address.substring(0, 2) === '0x') ? address : 'Please input your address above'}</span>\n      </div>\n      <a href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Buy MOAI <span dangerouslySetInnerHTML={{ __html: '&RightArrow;' }}></span>\n      </a>\n    </span>\n  )\n}\n\nexport default CTA\n","import React from 'react'\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\n}\n\nexport default SectionTitle\n","import React from 'react'\nimport { Card, CardBody } from '@windmill/react-ui'\n\nfunction InfoCard({ title, value, button, children: icon }) {\n  return (\n    <Card>\n      <CardBody className=\"flex items-center\">\n        {icon}\n        <div>\n          <p className=\"mb-2 text-sm font-medium text-gray-600 dark:text-gray-400\">{title}</p>\n          <p className=\"text-lg font-semibold text-gray-700 dark:text-gray-200\">{value}</p>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default InfoCard\n"],"sourceRoot":""}